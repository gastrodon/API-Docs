globals:
    responses:
        "*":
            "401":
                title: Unauthorized
                description: Unauthorized to make request, either because the authorization header is incorrect or missing
    headers:
        "*":
            - name: authorization
              value: The token returned when logging in or creating an account
              required: true
            - name: user-agent
              value: The user agent of the device using this app
              required: false

vars:
    feed-responses:
        "200":
            title: Feed slice fetched
            description: A slice of posts of this feed were fetched with usermap data
            body:
                lang: JSON
                content:
                    {
                        "data": {
                            "accounts": "{...}  <id -> user map>",
                            "posts": "[...]     <Array of posts>",
                            "cursor": "...      <Pagination cursor>",
                            "<->": "            <Only some feeds have cursors, sometimes>"
                        },
                        "success": 1
                    }
    request:
        device:
            PUT:
                lang: JSON
                content:
                    {
                        "applicationID": "co.byte  <Seems to accept arbitrary strings>",
                        "deviceToken": "...        <Device token. Appears to be generated by the app, seems to accept an arbitrary string>",
                        "deviceType": "android     <Only android seems to work. iOS / Apple string unknown>"
                    }
    response:
        global:
            ok:
                lang: JSON
                content:
                    {
                        "data": {},
                        "success": 1
                    }
            feed:
                lang: JSON
                content:
                    {
                        "data": {
                            "accounts": "{...}  <id -> user map>",
                            "posts": "[...]     <Array of posts>",
                            "cursor": "...      <Pagination cursor>",
                            "<->": "            <Only some feeds have cursors, sometimes>"
                        },
                        "success": 1
                    }
        me:
            GET:
                ok:
                    lang: JSON
                    content:
                        {
                            "data": {
                                "account": {
                                    "backgroundColor": "#000000         <Account background color",
                                    "followerCount": "0                 <Subscribers of this account>",
                                    "followingCount": "0                <Subscriptions of this account>",
                                    "foregroundColor": "#CCD6E9         <Account foreground color",
                                    "id": "                             <account id>",
                                    "isChannel": "false                 <Is this user a channel?>",
                                    "isDeactivated": "false             <Did this user deactivate their account?>",
                                    "isRegistered": "true               <Is this user registered?>",
                                    "isSuspended": "false               <Is this account suspended?>",
                                    "loopCount": "0                     <Total loops played of this account>",
                                    "loopsConsumedCount": "0            <Total loops played by this account>",
                                    "registrationDate": "1580272854     <Account creation Unix timestamp>",
                                    "username": "robotter               <Account username>"
                                }
                            },
                            "success": 1
                        }
        device:
            PUT:
                malformed:
                    lang: JSON
                    content:
                        {
                            "error": {
                                "code": 1404,
                                "message": "invalid device type"
                            },
                            "success": 0
                        }
        global-feed:
            GET:
                ok:
                    lang: JSON
                    content:
                        {
                            "data": {
                                "accounts": {
                                    "   <Account id>": {
                                        "avatarURL": "...                       <Account pfp link>",
                                        "backgroundColor": "#000000             <Account background color",
                                        "bio": "...                             <Account bio>",
                                        "displayName": "...                     <Non-unique display name>",
                                        "followerCount": "0                     <Subscribers of this account>",
                                        "followingCount": "0                    <Subscriptions of this account>",
                                        "foregroundColor": "#CCD6E9             <Account foreground color",
                                        "id": "                                 <Account id, should match the above key>",
                                        "isChannel": "false                     <Is this user a channel?>",
                                        "isDeactivated": "false                 <Did this user deactivate their account?>",
                                        "isRegistered": "true                   <Is this user registered?>",
                                        "isSuspended": "false                   <Is this account suspended?>",
                                        "loopCount": "0                         <Total loops played of this account>",
                                        "loopsConsumedCount": "0                <Total loops played by this account>",
                                        "registrationDate": "1580272854         <Account creation Unix timestamp>",
                                        "username": "robotter                   <Account username>"
                                    }
                                },
                                "posts": [
                                    {
                                        "allowCuration": "true                  <May this post be curated?>",
                                        "allowRemix": "false                    <May this post be remixed?>",
                                        "authorID": "...                        <ID that points to the post author",
                                        "caption": "                            <Post caption>",
                                        "commentCount": "0                      <Total comment count>",
                                        "commentCursor": "...                   <Comment pagination cursor>",
                                        "comments": [
                                            {
                                                "authorID": "...                <Comment author id>",
                                                "body": "...                    <Comment body",
                                                "date": "1580273915             <Comment creation timestamp>",
                                                "id": "...                      <Comment id. In the format post_id-unique_id",
                                                "mentions": "[...]              <Mentions in this comment>",
                                                "postID": "...                  <ID of this post>"
                                            }
                                        ],
                                        "date": "1580274189                     <Post create timestamp>",
                                        "id": "...                              <ID that points to this post>",
                                        "likeCount": "0                         <Total like count>",
                                        "likedByMe": "false                     <Was this liked by the authed user?>",
                                        "loopCount": "0                         <Total loops played of this video>",
                                        "mentions": [
                                            {
                                                "accountID": "...               <Account mentioned>",
                                                "byteRange": {
                                                    "start": "10                <Unknown>",
                                                    "stop": "15                 <Unknown, same length as range>"
                                                },
                                                "range": {
                                                    "start": "8                 <Mention substring start>",
                                                    "stop": "13                 <Mention substring end>"
                                                },
                                                "text": "@byte                  <Mention text>",
                                                "username": "byte               <Username mentioned"
                                            }
                                                    ],
                                        "rebytedByMe": "false                   <Was this rebyted by the authed user?>",
                                        "thumbSrc": "...                        <Video thumbnail link>",
                                        "type": "0                              <Unknown use>",
                                        "videoSrc": "...                        <Video link>"
                                    }
                                ],
                                "cursor": "...                                  <Likely pagination cursor>"
                            },
                            "success": 1
                        }
        explore:
            GET:
                ok:
                    lang: JSON
                    content:
                        {
                            "data": {
                                "layout": [
                                    {
                                        "background": {
                                            "color": "#00BBDB           <Card background color>",
                                            "type": "image              <Card background type>",
                                            "url": "...                 <Background image link, if any such background>"
                                        },
                                        "description": "null            <Card description, if any>",
                                        "header": {
                                            "backgroundColor": "null    <Header background color>",
                                            "color": "null              <Header color>",
                                            "title": "Popular Now       <Header title>"
                                        },
                                        "icon": "null                   <Icon link, if any such icon>",
                                        "sponsored": "false             <Is this sponsored? Ads appear to not yet be implemented>",
                                        "title": {
                                            "backgroundColor": "null    <Appears to always be nil>",
                                            "color": "#ffffff           <Title color>",
                                            "title": "Popular Now       <Title title>"
                                        },
                                        "type": "large                  <Card display type, observed include [image, large, medium]",
                                        "uri": "byte://...              <Byte-handleable endpoint. byte:// can be subbed for the api's baseurl>"
                                    }
                                ]
                            },
                            "success": 1
                        }
        rebytes:
            GET:
                ok:
                    lang: JSON
                    content:
                        {
                            "data": {
                                "accounts": "{...}                                  <id -> account object map>",
                                "rebytes": [
                                    {
                                        "authorID": "...                            <Rebyter id>",
                                        "date": "1580240837                         <Rebyte timestamp>",
                                        "id": "...                                  <Rebyte id>",
                                        "post": {
                                            "allowCuration": "true                  <May this post be curated?>",
                                            "allowRemix": "false                    <May this post be remixed?>",
                                            "authorID": "...                        <ID that points to the post author",
                                            "caption": "                            <Post caption>",
                                            "commentCount": "0                      <Total comment count>",
                                            "commentCursor": "...                   <Comment pagination cursor>",
                                            "comments": [
                                                {
                                                    "authorID": "...                <Comment author id>",
                                                    "body": "...                    <Comment body",
                                                    "date": "1580273915             <Comment creation timestamp>",
                                                    "id": "...                      <Comment id. In the format post_id-unique_id",
                                                    "mentions": "[...]              <Mentions in this comment>",
                                                    "postID": "...                  <ID of this post>"
                                                }
                                            ],
                                            "date": "1580274189                     <Post create timestamp>",
                                            "id": "...                              <ID that points to this post>",
                                            "likeCount": "0                         <Total like count>",
                                            "likedByMe": "false                     <Was this liked by the authed user?>",
                                            "loopCount": "0                         <Total loops played of this video>",
                                            "mentions": [
                                                {
                                                    "accountID": "...               <Account mentioned>",
                                                    "byteRange": {
                                                        "start": "10                <Unknown>",
                                                        "stop": "15                 <Unknown, same length as range>"
                                                    },
                                                    "range": {
                                                        "start": "8                 <Mention substring start>",
                                                        "stop": "13                 <Mention substring end>"
                                                    },
                                                    "text": "@byte                  <Mention text>",
                                                    "username": "byte               <Username mentioned"
                                                }
                                                        ],
                                            "rebytedByMe": "false                   <Was this rebyted by the authed user?>",
                                            "thumbSrc": "...                        <Video thumbnail link>",
                                            "type": "0                              <Unknown use>",
                                            "videoSrc": "...                        <Video link>"
                                        }
                                    }
                                ]
                            },
                            "success": 1
                        }

routes:
        /account/me:
            GET:
                description: Get information about the logged in account
                responses:
                    "200":
                        title: Account fetched
                        description: The account information of the logged in user was fetched
                        body: $response.me.GET.ok
        /account/me/device:
            PUT:
                description: Give byte information about this device
                body: $request.device.PUT
                responses:
                    "200":
                        title: Device info accepted
                        description: The device info sent is correct and was accepted
                        body: $response.global.ok
                    "200:1404":
                        title: Device info incorrect
                        description: The device info sent is malformed
                        body: $response.device.PUT.malformed
        /client/event:
            POST:
                description: Likely has to do with event tracking. Appears to always ratelimit me
                body: $request.client-event.POST
                responses:
                    "200":
                        title: Event accepted
                        description: The recorded event was accepted and recorded
                        body: $response.global.ok
        /feed/global:
            GET:
                description: Get data from the global feed
                responses:
                    "200":
                        title: Feed Data Fetched
                        description: A slice of data was fetched from the globla feed
                        body: $response.global-feed.GET.ok
        /explore:
            GET:
                description: Get possible explore feeds
                responses:
                    "200":
                        title: Explore cards recieved
                        description: The current explore cards have been fetched
                        body: $response.explore.GET.ok
        # feeds
        /timeline:
            GET:
                description: Get posts in the timeline of the authed user
                responses:
                    "200":
                        title: Timeline feed slice fetched
                        description: A slice of the timeline feed was fetched
                        body: $response.global.feed
        /timeline/rebytes:
            GET:
                description: |
                    Posts that have been rebyted into your timeline.
                    Essentially post objects wrapped in rebyte info, with the regular id -> user table in feeds
                responses:
                    "200":
                        title: Rebyte feed slice fetched
                        description: A slice of rebytes relevant to the authed user were fetched
                        body: $response.rebytes.GET.ok
        /feed/popular/v2:
            GET:
                description: |
                    Get a slice of posts in the popular feed.
                    These posts are mostly based on raw popularity, with little to no algorithmic influence.
                    This is different than the /v3/ endpoint, which is an algorithm based feed for some user
                responses: $feed-responses
        /feed/mix:
            GET:
                description: |
                    Get a slice of posts in the mix feed.
                    This seems to be a mixed feed of posts, possibly comparable to ifunny/collective
                responses: $feed-responses
