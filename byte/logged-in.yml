globals:
    responses:
        "*":
            "401":
                title: Unauthorized
                description: Unauthorized to make request, either because the authorization header is incorrect or missing
        "PUT":
            "200:1101":
                title: Bad request format
                description: |
                    The information sent is either malformed, has missing keys, or has unexpected extra keys.
                    It cannot be used. This should be treated similarly too an HTTP 400 bad request
                body: $response.global.bad-request
        "POST":
            "200:1101":
                title: Bad request format
                description: |
                    The information sent is either malformed, has missing keys, or has unexpected extra keys.
                    It cannot be used. This should be treated similarly too an HTTP 400 bad request
                body: $response.global.bad-request
    headers:
        "*":
            - name: authorization
              value: The token returned when logging in or creating an account
              required: true
            - name: user-agent
              value: The user agent of the device using this app
              required: false

vars:
    url:
        account-id:
            name: id
            description: the id of the user to query
    feed-responses:
        "200":
            title: Feed slice fetched
            description: A slice of posts of this feed were fetched with usermap data
            body:
                lang: JSON
                content:
                    {
                        "data": {
                            "accounts": "{...}  <id -> user map>",
                            "posts": "[...]     <Array of posts>",
                        },
                        "success": 1
                    }
    feed-responses-paged:
        "200":
            title: Feed slice fetched
            description: A slice of posts of this feed were fetched with usermap and pagination data
            body:
                lang: JSON
                content:
                    {
                        "data": {
                            "accounts": "{...}  <id -> user map>",
                            "posts": "[...]     <Array of posts>",
                            "cursor": "...      <Pagination cursor>",
                        },
                        "success": 1
                    }
    feed-rebytes-paged:
        "200":
            title: Feed slice fetched
            description: A slice of posts of this feed were fetched with usermap and pagination data
            body:
                lang: JSON
                content:
                    {
                        "data": {
                            "accounts": "{...}  <id -> user map>",
                            "rebytes": "[...]   <Array of post rebytes>",
                            "cursor": "...      <Pagination cursor>",
                        },
                        "success": 1
                    }
    request:
        device:
            PUT:
                lang: JSON
                content:
                    {
                        "applicationID": "co.byte  <Seems to accept arbitrary strings>",
                        "deviceToken": "...        <Device token. Appears to be generated by the app, seems to accept an arbitrary string>",
                        "deviceType": "android     <Only android seems to work. iOS / Apple string unknown>"
                    }
        account:
            PUT:
                lang: JSON
                content:
                    {
                        "colorScheme": "2       <Predefined color scheme to use>",
                        "bio": "...             <Profile bio to use, send a blank to remove>",
                        "displayName": "...     <Non-unique display name to use, send blank to remove>",
                        "username": "...        <Unique username to use>"
                    }
    response:
        object:
            feed:
                lang: JSON
                content:
                    {
                        "data": {
                            "accounts": "{...}  <id -> user map>",
                            "posts": "[...]     <Array of posts>",
                            "cursor": "...      <Pagination cursor>",
                            "<->": "            <Only some feeds have cursors, sometimes>"
                        },
                        "success": 1
                    }
            post:
                lang: JSON
                content:
                    {
                        "data": {
                            "accounts": "{...}      <id -> profile map>",
                            "allowCuration": "true  <May this post be curated?>",
                            "allowRemix": "false    <May this post be remixed?>",
                            "authorID": "...        <Post author id>",
                            "caption": "...         <Post caption>",
                            "commentCount": "6633   <Total comment count>",
                            "commentCursor": "...   <Comments paging cursor>",
                            "comments": "[...]      <Array of comments>",
                            "date": "1579934060     <Post create timestamp>",
                            "id": "...              <Post id>",
                            "likeCount": "119453    <Total like count>",
                            "likedByMe": "false     <Did the authed user like this post?>",
                            "loopCount": "2356580   <Total loop count>",
                            "mentions": "[]         <Array of mentions>",
                            "rebytedByMe": "false   <Did the authed user rebyte this post?>",
                            "thumbSrc": "...        <Thumbnail resource link>",
                            "type": "0              <Unknown>",
                            "videoSrc": "...        <Video resource link>"
                        },
                        "success": 1
                    }
            comment:
                lang: JSON
                content:
                    {
                        "authorID": "...            <Comment author id>",
                        "body": "...                <Comment text body>",
                        "date": "1580275243         <Comment create timestamp>",
                        "id": "...-...              <Comment id as <post_id>-<comment_id>",
                        "mentions": [
                            {
                                "accountID": "...   <Account mentioned>",
                                "byteRange": {
                                    "start": "10    <Unknown>",
                                    "stop": "15     <Unknown, same length as range>"
                                },
                                "range": {
                                    "start": "8     <Mention substring start>",
                                    "stop": "13     <Mention substring end>"
                                },
                                "text": "@byte      <Mention text>",
                                "username": "byte   <Username mentioned"
                            }
                        ],
                        "postID": "...              <Parent post id>"
                    }
            user:
                lang: JSON
                content:
                    {
                        "data": {
                            "avatarURL": "...                   <Account pfp link>",
                            "backgroundColor": "#000000         <Account background color",
                            "bio": "...                         <Account bio>",
                            "displayName": "...                 <Non-unique display name>",
                            "followerCount": "0                 <Subscribers of this account>",
                            "followingCount": "0                <Subscriptions of this account>",
                            "foregroundColor": "#CCD6E9         <Account foreground color",
                            "id": "                             <Account id>",
                            "isBlocked": "false                 <Is this user blocked by the authed user?>",
                            "isChannel": "false                 <Is this user a channel?>",
                            "isFollowed": "false                <Is this user being followed by the authed user?>",
                            "isFollowing": "false               <Is this user following the authed user?>",
                            "loopCount": "0                     <Total loops played of this account>",
                            "loopsConsumedCount": "0            <Total loops played by this account>",
                            "registrationDate": "1580272854     <Account creation Unix timestamp>",
                            "username": "robotter               <Account username>"
                        },
                        "success": 1
                    }
        global:
            ok:
                lang: JSON
                content:
                    {
                        "data": {},
                        "success": 1
                    }
            taken:
                lang: JSON
                content:
                    {
                        "success": 0,
                        "error": {
                            "code": 1402,
                            "message": "username is already in use"
                        }
                    }
            invalid:
                lang: JSON
                content:
                    {
                        "success": 0,
                        "error": {
                            "code": 1401,
                            "message": "invalid username"
                        }
                    }
            bad-request:
                lang: JSON
                content:
                    {
                        "error": {
                            "code": 1101,
                            "message": "bad request format"
                        },
                        "success": 0
                    }
        me:
            GET:
                ok:
                    lang: JSON
                    content:
                        {
                            "data": {
                                "account": {
                                    "backgroundColor": "#000000         <Account background color",
                                    "followerCount": "0                 <Subscribers of this account>",
                                    "followingCount": "0                <Subscriptions of this account>",
                                    "foregroundColor": "#CCD6E9         <Account foreground color",
                                    "id": "                             <account id>",
                                    "isChannel": "false                 <Is this user a channel?>",
                                    "isDeactivated": "false             <Did this user deactivate their account?>",
                                    "isRegistered": "true               <Is this user registered?>",
                                    "isSuspended": "false               <Is this account suspended?>",
                                    "loopCount": "0                     <Total loops played of this account>",
                                    "loopsConsumedCount": "0            <Total loops played by this account>",
                                    "registrationDate": "1580272854     <Account creation Unix timestamp>",
                                    "username": "robotter               <Account username>"
                                }
                            },
                            "success": 1
                        }
        device:
            PUT:
                malformed:
                    lang: JSON
                    content:
                        {
                            "error": {
                                "code": 1404,
                                "message": "invalid device type"
                            },
                            "success": 0
                        }
        global-feed:
            GET:
                ok:
                    lang: JSON
                    content:
                        {
                            "data": {
                                "accounts": {
                                    "   <Account id>": {
                                        "avatarURL": "...                       <Account pfp link>",
                                        "backgroundColor": "#000000             <Account background color",
                                        "bio": "...                             <Account bio>",
                                        "displayName": "...                     <Non-unique display name>",
                                        "followerCount": "0                     <Subscribers of this account>",
                                        "followingCount": "0                    <Subscriptions of this account>",
                                        "foregroundColor": "#CCD6E9             <Account foreground color",
                                        "id": "                                 <Account id, should match the above key>",
                                        "isChannel": "false                     <Is this user a channel?>",
                                        "isDeactivated": "false                 <Did this user deactivate their account?>",
                                        "isRegistered": "true                   <Is this user registered?>",
                                        "isSuspended": "false                   <Is this account suspended?>",
                                        "loopCount": "0                         <Total loops played of this account>",
                                        "loopsConsumedCount": "0                <Total loops played by this account>",
                                        "registrationDate": "1580272854         <Account creation Unix timestamp>",
                                        "username": "robotter                   <Account username>"
                                    }
                                },
                                "posts": [
                                    {
                                        "allowCuration": "true                  <May this post be curated?>",
                                        "allowRemix": "false                    <May this post be remixed?>",
                                        "authorID": "...                        <ID that points to the post author",
                                        "caption": "                            <Post caption>",
                                        "commentCount": "0                      <Total comment count>",
                                        "commentCursor": "...                   <Comment pagination cursor>",
                                        "comments": [
                                            {
                                                "authorID": "...                <Comment author id>",
                                                "body": "...                    <Comment body",
                                                "date": "1580273915             <Comment creation timestamp>",
                                                "id": "...                      <Comment id. In the format post_id-unique_id",
                                                "mentions": "[...]              <Mentions in this comment>",
                                                "postID": "...                  <ID of this post>"
                                            }
                                        ],
                                        "date": "1580274189                     <Post create timestamp>",
                                        "id": "...                              <ID that points to this post>",
                                        "likeCount": "0                         <Total like count>",
                                        "likedByMe": "false                     <Was this liked by the authed user?>",
                                        "loopCount": "0                         <Total loops played of this video>",
                                        "mentions": [
                                            {
                                                "accountID": "...               <Account mentioned>",
                                                "byteRange": {
                                                    "start": "10                <Unknown>",
                                                    "stop": "15                 <Unknown, same length as range>"
                                                },
                                                "range": {
                                                    "start": "8                 <Mention substring start>",
                                                    "stop": "13                 <Mention substring end>"
                                                },
                                                "text": "@byte                  <Mention text>",
                                                "username": "byte               <Username mentioned"
                                            }
                                                    ],
                                        "rebytedByMe": "false                   <Was this rebyted by the authed user?>",
                                        "thumbSrc": "...                        <Video thumbnail link>",
                                        "type": "0                              <Unknown use>",
                                        "videoSrc": "...                        <Video link>"
                                    }
                                ],
                                "cursor": "...                                  <Likely pagination cursor>"
                            },
                            "success": 1
                        }
        explore:
            GET:
                ok:
                    lang: JSON
                    content:
                        {
                            "data": {
                                "layout": [
                                    {
                                        "background": {
                                            "color": "#00BBDB           <Card background color>",
                                            "type": "image              <Card background type>",
                                            "url": "...                 <Background image link, if any such background>"
                                        },
                                        "description": "null            <Card description, if any>",
                                        "header": {
                                            "backgroundColor": "null    <Header background color>",
                                            "color": "null              <Header color>",
                                            "title": "Popular Now       <Header title>"
                                        },
                                        "icon": "null                   <Icon link, if any such icon>",
                                        "sponsored": "false             <Is this sponsored? Ads appear to not yet be implemented>",
                                        "title": {
                                            "backgroundColor": "null    <Appears to always be nil>",
                                            "color": "#ffffff           <Title color>",
                                            "title": "Popular Now       <Title title>"
                                        },
                                        "type": "large                  <Card display type, observed include [image, large, medium]",
                                        "uri": "byte://...              <Byte-handleable endpoint. byte:// can be subbed for the api's baseurl>"
                                    }
                                ]
                            },
                            "success": 1
                        }
        rebytes:
            GET:
                ok:
                    lang: JSON
                    content:
                        {
                            "data": {
                                "accounts": "{...}                                  <id -> account object map>",
                                "rebytes": [
                                    {
                                        "authorID": "...                            <Rebyter id>",
                                        "date": "1580240837                         <Rebyte timestamp>",
                                        "id": "...                                  <Rebyte id>",
                                        "post": {
                                            "allowCuration": "true                  <May this post be curated?>",
                                            "allowRemix": "false                    <May this post be remixed?>",
                                            "authorID": "...                        <ID that points to the post author",
                                            "caption": "                            <Post caption>",
                                            "commentCount": "0                      <Total comment count>",
                                            "commentCursor": "...                   <Comment pagination cursor>",
                                            "comments": [
                                                {
                                                    "authorID": "...                <Comment author id>",
                                                    "body": "...                    <Comment body",
                                                    "date": "1580273915             <Comment creation timestamp>",
                                                    "id": "...                      <Comment id. In the format post_id-unique_id",
                                                    "mentions": "[...]              <Mentions in this comment>",
                                                    "postID": "...                  <ID of this post>"
                                                }
                                            ],
                                            "date": "1580274189                     <Post create timestamp>",
                                            "id": "...                              <ID that points to this post>",
                                            "likeCount": "0                         <Total like count>",
                                            "likedByMe": "false                     <Was this liked by the authed user?>",
                                            "loopCount": "0                         <Total loops played of this video>",
                                            "mentions": [
                                                {
                                                    "accountID": "...               <Account mentioned>",
                                                    "byteRange": {
                                                        "start": "10                <Unknown>",
                                                        "stop": "15                 <Unknown, same length as range>"
                                                    },
                                                    "range": {
                                                        "start": "8                 <Mention substring start>",
                                                        "stop": "13                 <Mention substring end>"
                                                    },
                                                    "text": "@byte                  <Mention text>",
                                                    "username": "byte               <Username mentioned"
                                                }
                                                        ],
                                            "rebytedByMe": "false                   <Was this rebyted by the authed user?>",
                                            "thumbSrc": "...                        <Video thumbnail link>",
                                            "type": "0                              <Unknown use>",
                                            "videoSrc": "...                        <Video link>"
                                        }
                                    }
                                ]
                            },
                            "success": 1
                        }
        categories:
            GET:
                ok:
                    lang: JSON
                    content:
                        {
                            "data": {
                                "categories": [
                                    {
                                        "icon": "...    <Category icon link. This is usually 200px",
                                        "id": "comedy   <Category id, used in /feed/categories/:id>",
                                        "name": "Comedy <Category name>"
                                    }
                                ]
                            },
                            "success": 1
                        }
        loop:
            POST:
                ok:
                    lang: JSON
                    content:
                        {
                            "data": {
                                    "postID": "...      <ID of the looped post>",
                                    "loopCount": "...   <Updated loop count>"
                                },
                                "success": 1
                        }
        post-comments:
            GET:
                ok:
                    lang: JSON
                    content:
                        {
                            "data": {
                                "accounts": "{...}                  <id -> profile map>",
                                "comments": [
                                    {
                                        "authorID": "...            <Comment author id>",
                                        "body": "...                <Comment text body>",
                                        "date": "1580275243         <Comment create timestamp>",
                                        "id": "...-...              <Comment id as <post_id>-<comment_id>",
                                        "mentions": [
                                            {
                                                "accountID": "...   <Account mentioned>",
                                                "byteRange": {
                                                    "start": "10    <Unknown>",
                                                    "stop": "15     <Unknown, same length as range>"
                                                },
                                                "range": {
                                                    "start": "8     <Mention substring start>",
                                                    "stop": "13     <Mention substring end>"
                                                },
                                                "text": "@byte      <Mention text>",
                                                "username": "byte   <Username mentioned"
                                            }
                                        ],
                                        "postID": "...              <Parent post id>"
                                    }
                                ],
                                "cursor": "...                      <Pagination cursor>"
                            },
                            "success": 1
                        }
        user-list:
            GET:
                ok:
                    lang: JSON
                    content:
                        {
                            "data": {
                                "accounts": [
                                    {
                                        "avatarURL": "...                   <Account pfp link>",
                                        "backgroundColor": "#000000         <Account background color",
                                        "bio": "...                         <Account bio>",
                                        "displayName": "...                 <Non-unique display name>",
                                        "followerCount": "0                 <Subscribers of this account>",
                                        "followingCount": "0                <Subscriptions of this account>",
                                        "foregroundColor": "#CCD6E9         <Account foreground color",
                                        "id": "                             <Account id>",
                                        "isBlocked": "false                 <Is this user blocked by the authed user?>",
                                        "isChannel": "false                 <Is this user a channel?>",
                                        "isFollowed": "false                <Is this user being followed by the authed user?>",
                                        "isFollowing": "false               <Is this user following the authed user?>",
                                        "loopCount": "0                     <Total loops played of this account>",
                                        "loopsConsumedCount": "0            <Total loops played by this account>",
                                        "registrationDate": "1580272854     <Account creation Unix timestamp>",
                                        "username": "robotter               <Account username>"
                                    }
                                ]
                            },
                            "success": 1
                        }

routes:
        /account/me:
            GET:
                description: Get information about the logged in account
                responses:
                    "200":
                        title: Account fetched
                        description: The account information of the logged in user was fetched
                        body: $response.me.GET.ok
            PUT:
                description: |
                    Update the authed user.
                    Any or all of the json fields may be included or omitted,
                    but the request will only work if all data being sent is new
                body: $request.account.PUT
                responses:
                    "200":
                        title: Account updated
                        description: The information sent was ok and the profile information is updated
                        body: $response.global.ok
                    "200:1401":
                        title: Username invalid
                        description: The username sent is too long or has bad characters
                        body: $response.global.invalid
                    "200:1402":
                        title: Username taken
                        description: The username sent is already taken and cannot be used
                        body: $response.global.taken
        /account/me/device:
            PUT:
                description: Give byte information about this device
                body: $request.device.PUT
                responses:
                    "200":
                        title: Device info accepted
                        description: The device info sent is correct and was accepted
                        body: $response.global.ok
                    "200:1404":
                        title: Device info incorrect
                        description: The device info sent is malformed
                        body: $response.device.PUT.malformed
        /client/event:
            POST:
                description: Likely has to do with event tracking. Appears to always ratelimit me
                body: $request.client-event.POST
                responses:
                    "200":
                        title: Event accepted
                        description: The recorded event was accepted and recorded
                        body: $response.global.ok
        /feed/global:
            GET:
                description: Get data from the global feed
                responses: $feed-responses-paged
        /explore:
            GET:
                description: Get possible explore feeds
                responses:
                    "200":
                        title: Explore cards recieved
                        description: The current explore cards have been fetched
                        body: $response.explore.GET.ok
        # feeds
        /timeline:
            GET:
                description: Get posts in the timeline of the authed user
                responses:
                    "200":
                        title: Timeline feed slice fetched
                        description: A slice of the timeline feed was fetched
                        body: $response.object.feed
        /timeline/rebytes:
            GET:
                description: |
                    Posts that have been rebyted into your timeline.
                    Essentially post objects wrapped in rebyte info, with the regular id -> user table in feeds
                responses: $feed-rebytes-paged
        /feed/popular/v2:
            GET:
                description: |
                    Get a slice of posts in the popular feed.
                    These posts are mostly based on raw popularity, with little to no algorithmic influence.
                    This is different than the /v3/ endpoint, which is an algorithm based feed for some user
                responses: $feed-responses-paged
        /feed/popular/v3:
            GET:
                description: |
                    Get a slice of posts in the popular:v3 feed.
                    These posts are curated by an algorithm, not necessarially popular.
                    For regular popular, see the /v2/ endpoint, which is mostly purely popular
                responses: $feed-responses
        /feed/mix:
            GET:
                description: |
                    Get a slice of posts in the mix feed.
                    This seems to be a mixed feed of posts, possibly comparable to ifunny/collective
                responses: $feed-responses
        /categories:
            GET:
                description: Get a list of feed categories. These can be used in the /feed/categories/:id endpoint
                responses:
                    "200":
                        title: Categories fetched
                        description: A list of categories has been fetched
                        body: $response.categories.GET.ok
        /feed/categories/:id/popular:
            GET:
                description: |
                    Get a slice of popular posts in some category, denoted by its id.
                    The only observed sub-endpoint for any category is `popular`.
                    Lists of categories can be fetched with GET `/categories`
                responses: $feed-responses-paged
        # posts
        /post/id/:id:
            GET:
                description: Get a post by its id
                responses:
                    "200":
                        title: Post retrieved
                        description: A post of id `id` exists and was retrieved
                        body: $response.object.post
        /post/id/:id/loop:
            POST:
                description: |
                    Mark video as looped and increase its total loop count.
                    There appears to be no ratelimit to marking posts as looped, so videos can be looped more times
                    than they could be watched in the same timeframe
                responses:
                    "200":
                        title: Post looped
                        description: This post has been marked as looped, and its loop count has been updated
                        body: $response.loop.POST.ok
        /post/id/:id/feedback/comments:
            GET:
                description: Get a slice of comments on a post with usermap data
                responses:
                    "200":
                        title: Comment slice recieved
                        description: A slice of comments was fetched
                        body: $response.post-comments.GET.ok
        # users
        /account/id/:id:
            GET:
                description: Get a user by their id
                url params:
                    - $url.account-id
                responses:
                    "200":
                        title: User information recieved
                        description: A user of id `id` exists and was retrieved
                        body: $response.object.user
        /account/id/:id/posts:
            GET:
                description: Get posts by some user
                url params:
                    - $url.account-id
                responses: $feed-responses-paged
        /account/id/:id/rebytes:
            GET:
                description: Get rebytes by some user
                url params:
                    - $url.account-id
                responses: $feed-rebytes-paged
        /account/prefix/:prefix:
            GET:
                description: Search for users by some username `prefix`
                url params:
                    - name: prefix
                      description: prefix to search for
                responses:
                    "200":
                        title: Search results fetched
                        description: Search results for the prefix used were returned
                        body: $response.user-list.GET.ok
                    "200:1401":
                        title: Bad search
                        description: Search string has invalid characters that cannot prefix a username
                        body: $response.global.invalid
